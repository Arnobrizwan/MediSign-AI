import 'dart:convert';
import 'package:http/http.dart' as http;
import 'dart:js' as js;

/// A simplified Gemini chat client that tries a few specific models directly
class GeminiChatClient {
  // Store last successful model to optimize future requests
  static String? _lastSuccessfulModel;
  
  // Get API key from JavaScript bridge
  String get _apiKey {
    try {
      return js.context['GEMINI_API_KEY'] as String;
    } catch (e) {
      print('‚ùå Error accessing API key from JavaScript: $e');
      return '';
    }
  }

  // List of models to try in order of preference
  final List<Map<String, String>> _modelsToTry = [
    {
      'name': '2.5-flash-preview-0417',
      'endpoint': 'https://generativelanguage.googleapis.com/beta/models/gemini-2.5-flash-preview:generateContent',
      'apiVersion': 'v1beta'
    },
    {
      'name': 'gemini-2.5-pro-preview-0506',
      'endpoint': 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview:generateContent',
      'apiVersion': 'v1beta'
    },
    {
      'name': 'gemini-2.0-flash',
      'endpoint': 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent',
      'apiVersion': 'v1beta'
    },
    {
      'name': 'gemini-2.0-flash',
      'endpoint': 'https://generativelanguage.googleapis.com/v1/models/gemini-2.0-flash:generateContent',
      'apiVersion': 'v1'
    }
  ];

  /// Sends [userInput] to Gemini API directly
  Future<String> send(String userInput) async {
    final systemPrompt = '''
üë©‚Äç‚öïÔ∏è You are MedisignAI, an empathetic, HIPAA-compliant medical assistant serving global users.

## Medical Domains:
‚Ä¢ **Minor ailments**: Triage headaches, colds, fevers, digestive upsets, allergies, minor burns, cuts, sprains, and skin rashes.
‚Ä¢ **Major conditions**: Counsel on diabetes, hypertension, heart disease, cancer, autoimmune disorders, kidney disease, and liver conditions.
‚Ä¢ **Infectious diseases**: Advise on COVID-19, influenza, dengue, malaria, tuberculosis, hepatitis, HIV/AIDS (preventive information only), and zoonotic diseases.
‚Ä¢ **Mental health**: Support for depression, anxiety, stress management, sleep hygiene, PTSD, bipolar disorder, ADHD, and eating disorders.
‚Ä¢ **Women's health**: Menstruation concerns, pregnancy symptoms, menopause, contraception options, and breast health awareness.
‚Ä¢ **Men's health**: Prostate health, testicular self-exams, erectile dysfunction general information, and testosterone-related concerns.
‚Ä¢ **Pediatric concerns**: Common childhood illnesses, developmental milestones, vaccination schedules, nutrition for growing children, and adolescent health.
‚Ä¢ **Geriatric care**: Fall prevention, memory concerns, medication management tips, and maintaining independence.
‚Ä¢ **Preventive care**: Vaccinations, screenings, lifestyle modifications, nutrition guidance, and exercise recommendations.
‚Ä¢ **Chronic pain**: General management strategies, non-pharmacological approaches, and when to seek specialized care.
‚Ä¢ **Digestive health**: IBS, GERD, Crohn's, ulcerative colitis, and common digestive symptoms.
‚Ä¢ **Respiratory conditions**: Asthma, COPD, seasonal allergies, bronchitis, and breathing exercises.
‚Ä¢ **Dermatological issues**: Common skin conditions, basic skincare advice, sun protection, and when to see a dermatologist.
‚Ä¢ **Neurological concerns**: Headache types, vertigo, seizure first aid, and stroke warning signs.
‚Ä¢ **Endocrine disorders**: Thyroid conditions, adrenal issues, and hormonal imbalances.
‚Ä¢ **Oral health**: Basic dental hygiene, common dental problems, and preventive care.
‚Ä¢ **Eye conditions**: Common vision problems, eye infection signs, and eye strain prevention.
‚Ä¢ **Travel health**: General guidance on vaccinations, common travel risks, jet lag management, and traveler's diarrhea prevention.
‚Ä¢ **Environmental & occupational**: Air pollution protection, heat/cold stress, ergonomic advice, and workplace health tips.
‚Ä¢ **Nutritional guidance**: Balanced diet recommendations, food allergies/intolerances, special dietary needs, and nutritional deficiencies.
‚Ä¢ **Physical activity**: Exercise recommendations for different age groups and conditions, injury prevention, and rehabilitation basics.
‚Ä¢ **Sleep health**: Sleep hygiene practices, common sleep disorders, and healthy sleep patterns.
‚Ä¢ **Substance use**: Information about tobacco, alcohol, caffeine effects, and substance use harm reduction.
‚Ä¢ **Alternative/complementary approaches**: Overview of evidence-based complementary therapies, meditation, acupuncture, and herbal medicine facts.
‚Ä¢ **Emergency recognition**: Help identify true medical emergencies requiring immediate care.
‚Ä¢ **Medication guidance**: General information about common medication classes, adherence importance, and potential interactions.
‚Ä¢ **Surgical preparation**: General pre-operative and post-operative care guidance.
‚Ä¢ **Rehabilitation**: Basic advice for recovery from injuries, surgeries, or acute conditions.
‚Ä¢ **Rare diseases**: Listen carefully to symptoms of rare conditions and suggest specialist evaluation.
‚Ä¢ **Immune system health**: Immunodeficiencies, autoimmune conditions, and immune system support.
‚Ä¢ **Palliative care**: General comfort measures and quality of life considerations for serious illnesses.
‚Ä¢ **Genetic conditions**: Basic information about hereditary conditions and when genetic counseling might be appropriate.
‚Ä¢ **Reproductive health**: Fertility awareness, sexual health education, and STI prevention information.
‚Ä¢ **Post-discharge care**: General guidance for recovery after hospital stays.
‚Ä¢ **Health literacy**: Explain medical terms in simple language and help interpret basic medical information.
‚Ä¢ **Accessibility needs**: Provide accommodations for users with disabilities or language barriers.
‚Ä¢ **Cultural sensitivity**: Respect cultural differences in health beliefs and practices.
‚Ä¢ **LGBTQ+ health**: Inclusive care information addressing specific health concerns.

## Response Guidelines:
‚Ä¢ Always **recommend appropriate specialists** when needed (e.g., cardiologist, dermatologist, psychiatrist, etc.).
‚Ä¢ Suggest **common treatments or medications** (OTC and general classes of prescriptions) without prescribing.
‚Ä¢ For serious symptoms, **emphasize the importance of urgent medical attention**.
‚Ä¢ Provide **lifestyle modification suggestions** when appropriate.
‚Ä¢ Include **preventive care recommendations** relevant to the user's concern.
‚Ä¢ Offer **reliable self-care strategies** for managing symptoms.
‚Ä¢ **Acknowledge uncertainty** when information is incomplete.
‚Ä¢ **Respect patient autonomy** while providing evidence-based guidance.
‚Ä¢ **Adapt communication style** based on health literacy level.
‚Ä¢ **Prioritize critical information** for emergency situations.
‚Ä¢ **Note important warning signs** that require medical follow-up.
‚Ä¢ **Emphasize continuity of care** for chronic conditions.
‚Ä¢ **Consider geographic differences** in healthcare access and resources.
‚Ä¢ **Be mindful of socioeconomic factors** affecting health decisions.

## Important Disclaimers:
‚Ä¢ Begin responses with: "üë©‚Äç‚öïÔ∏è MedisignAI here!"
‚Ä¢ End responses with: "‚ö†Ô∏è Disclaimer: I am not a doctor; please consult a qualified healthcare professional for diagnosis and treatment."
‚Ä¢ Use a **warm, interactive tone** with appropriate emojis to reassure and engage users worldwide.
‚Ä¢ **Do not diagnose** specific conditions, but help users understand possible causes of symptoms.
‚Ä¢ **Clearly state limitations** of AI-based medical assistance.
‚Ä¢ **Encourage professional medical consultation** for all significant health concerns.
''';

    try {
      // Standard payload structure that works with most models
      final payload = {
        'contents': [
          {
            'role': 'user',
            'parts': [
              { 'text': systemPrompt },
              { 'text': userInput }
            ]
          }
        ],
        'generationConfig': {
          'temperature': 0.4,
          'candidateCount': 1,
          'maxOutputTokens': 2048
        }
      };

      // Try each model in the list until one works
      // If we have a previously successful model, try that first
      final modelsToTry = List<Map<String, String>>.from(_modelsToTry);
      if (_lastSuccessfulModel != null) {
        // Move the last successful model to the front of the list
        final lastSuccessfulIndex = modelsToTry.indexWhere((model) => model['name'] == _lastSuccessfulModel);
        if (lastSuccessfulIndex >= 0) {
          final lastSuccessfulModel = modelsToTry.removeAt(lastSuccessfulIndex);
          modelsToTry.insert(0, lastSuccessfulModel);
          print('üîÑ Prioritizing last successful model: $_lastSuccessfulModel');
        }
      }
      
      for (final model in modelsToTry) {
        try {
          print('üß™ Trying model: ${model['name']}');
          
          final endpoint = '${model['endpoint']}?key=$_apiKey';
          final response = await http.post(
            Uri.parse(endpoint),
            headers: {'Content-Type': 'application/json'},
            body: jsonEncode(payload),
          ).timeout(const Duration(seconds: 5)); // Reduce timeout to 5 seconds to match expected load time
          
          if (response.statusCode == 200) {
            print('‚úÖ Success with model: ${model['name']}');
            
            final jsonResponse = jsonDecode(response.body);
            String? reply;
            
            // Try to parse based on API version
            if (model['apiVersion'] == 'v1beta') {
              reply = jsonResponse['candidates']?[0]?['content']?['parts']?[0]?['text'];
            } else {
              reply = jsonResponse['candidates']?[0]?['content']?['parts']?[0]?['text'] ??
                     jsonResponse['candidates']?[0]?['text'] ??
                     jsonResponse['response']?['text'];
            }
            
            if (reply != null && reply.trim().isNotEmpty) {
              // Remember this successful model for future requests
              _lastSuccessfulModel = model['name'];
              return reply.trim();
            }
          } else {
            print('‚ö†Ô∏è Model ${model['name']} failed: (${response.statusCode}) - ${response.body}');
          }
        } catch (e) {
          print('‚ö†Ô∏è Error with model ${model['name']}: $e');
          // Continue to next model
        }
      }
      
      // If all models fail, return mock response
      print('‚ùå All models failed, using mock response');
      return _getMockResponse(userInput);
    } catch (e) {
      print('‚ùå Fatal error: $e');
      return _getMockResponse(userInput);
    }
  }
  
  /// Generate a basic mock response when API calls fail
  String _getMockResponse(String userInput) {
    // Convert input to lowercase for easier matching
    final input = userInput.toLowerCase();
    
    // Check for common health keywords
    if (input.contains('headache')) {
      return '''üë©‚Äç‚öïÔ∏è MedisignAI here!

I understand you're dealing with a headache. This could be due to various reasons like stress, dehydration, lack of sleep, or eyestrain.

Try these steps:
‚Ä¢ Drink water - dehydration is a common cause
‚Ä¢ Take a break from screens
‚Ä¢ Rest in a quiet, dark room
‚Ä¢ Try over-the-counter pain relievers like acetaminophen or ibuprofen if appropriate
‚Ä¢ Apply a cold or warm compress to your forehead or neck

If your headache is severe, sudden, or accompanied by fever, confusion, stiff neck, or vision changes, please seek medical attention immediately.

‚ö†Ô∏è Disclaimer: I am not a doctor; please consult a qualified healthcare professional for diagnosis and treatment.''';
    } else if (input.contains('cold') || input.contains('flu') || input.contains('sick')) {
      return '''üë©‚Äç‚öïÔ∏è MedisignAI here!

Sorry to hear you're feeling unwell. For cold or flu symptoms, focus on rest and recovery:
‚Ä¢ Stay hydrated with plenty of fluids
‚Ä¢ Get extra rest
‚Ä¢ Use over-the-counter medications for symptom relief if appropriate
‚Ä¢ Use a humidifier to ease congestion
‚Ä¢ Try warm liquids like tea with honey for sore throat

If you experience high fever (above 101.3¬∞F/38.5¬∞C), difficulty breathing, chest pain, or symptoms that worsen after improving, please seek medical attention.

‚ö†Ô∏è Disclaimer: I am not a doctor; please consult a qualified healthcare professional for diagnosis and treatment.''';
    } else if (input.contains('pain')) {
      return '''üë©‚Äç‚öïÔ∏è MedisignAI here!

I'm sorry to hear you're experiencing pain. Here are some general recommendations:
‚Ä¢ Rest the affected area if possible
‚Ä¢ Apply ice for acute pain (first 48 hours) to reduce inflammation
‚Ä¢ Apply heat for chronic pain to improve blood flow
‚Ä¢ Try over-the-counter pain relievers if appropriate
‚Ä¢ Consider gentle stretching for muscle pain (if not acute injury)

Seek immediate medical attention if:
‚Ä¢ Pain is severe or unbearable
‚Ä¢ Pain is accompanied by fever, redness, or swelling
‚Ä¢ Pain follows an injury
‚Ä¢ You experience chest pain or difficulty breathing
‚Ä¢ You have abdominal pain that is severe or accompanied by vomiting

‚ö†Ô∏è Disclaimer: I am not a doctor; please consult a qualified healthcare professional for diagnosis and treatment.''';
    } else {
      return '''üë©‚Äç‚öïÔ∏è MedisignAI here!

Thank you for your message. I'd be happy to help with your health question.

For general health maintenance:
‚Ä¢ Stay hydrated with plenty of water throughout the day
‚Ä¢ Eat a balanced diet rich in fruits, vegetables, whole grains, and lean proteins
‚Ä¢ Get regular physical activity - aim for at least 150 minutes of moderate exercise per week
‚Ä¢ Ensure adequate sleep (7-9 hours for most adults)
‚Ä¢ Manage stress through relaxation techniques like deep breathing or meditation
‚Ä¢ Stay up to date with recommended preventive screenings and vaccinations

If you have specific health concerns, please provide more details so I can offer more tailored information.

‚ö†Ô∏è Disclaimer: I am not a doctor; please consult a qualified healthcare professional for diagnosis and treatment.''';
    }
  }
}